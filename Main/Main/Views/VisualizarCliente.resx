<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_IconeCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gUYFxAiTN4GaQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPKSURBVHhe
        5ZvPy01BGMdf7ESxU5S/Q1lY2JCs2FKysFHCyp8giaTE1p6VhZC9LCSxtCAlNlYkP76f6Z7buXOfe+7M
        mblz5zbf+tTtzI8zz/d9z5kzz5yzVUC7xElxSVwXD8UL8UH8mMBvjlFGHerShrYbqf3igngifop/I6Et
        fdAXfVatneKqeCX+CiugFOiTvjkH56pGO8R58VlYA18Fn8Q5sV2sVSfEO2ENsgRvxTFRXAfFS2ENah08
        EwdEER0WX4U1kHXyRRwSKxXX3S9hDaAGmDXOiuziRndTWCetkRuCMWcRHT0W1olqhjFnMWGT/vI+jD1J
        XPNWx5sEMYwSd/uab3ihEAOxRIl5vsapbizEQkzBqukhJxfEFCQeb60OfN6Le5XAWKwx+hDboJg2Qp7t
        eQbfJmoRY2FM1lj7ENvg1Miqzmroc1vUJsZkjdWHGE2xxg5d0t4StYkxWWP1IUYzn0CiwWpg4RvwXJDW
        KgmZor5CDQBinRPZFquyhW/AR2HVWyWY0FeMAcQ6I/JtMWmsTTeAWGdyjCQdrYqLyGHAG3F/Ar+tOkOk
        GADEPBXXk1VpESkGfBOnhS+OUWa1sUg1YHoPIfcem7oeawD/ekfFIlEWeimmGkDMbt+BDQirwhBjDXgk
        lok6VlufVAOA2N0ujFU4xFgDrohloo7V1ieHAcTutqKswiHGGhCyNg/NQeQwgNjdfpxVOMRYA+6KZaKO
        1dYnhwHE7jYlrcIhxhrwXewTi0QZday2PjkMIHbXkVU4xFgD4KnYI3xxjDKrjUUOA1wfbE9bhUOkGAAs
        SC6LIxP4Hbu3SA6grzEGEHtxA36LB+K1+DOB3xyjzGpjkeM/wBlQ8hIgwFOi094JnSgLNSHbJVDqJugH
        v0ihJuQwwN0ES02D10SoqGv10SeHAW4aLPEgxNS2W4SKusumwxwGuAehEo/Cd0SsaGP11ZHDAPcoXGIx
        dFHEijZWXx05DHCLoRLL4eMiVrSx+upINWC6HEarTogwz7MzEwNtrL46Ug2YSaquIyWWSqoBMymx5pOi
        KCUtzhqeO2pJzoi+YgyYS4ujlI2RGhRjgLkx0vzWGGp6cxQ1vz2Omn5BohMPIlYHmwwxBav5l6RQ06/J
        dWr6RclOTb8qi5g2mn5ZGtFRs6/L98X11OQHE301/clMp6Y/muqr2c/m+uJm0+yHk32xxibRQLYlJr0W
        Cn3SN+dYuJ6vReTbSDqSeY1NufehLX3Q11wOb1NE7p0NCPJ4bEWxH8emJElNtqeB3xyjjDrUpc00b78a
        bW39BwF7+IJ15B3nAAAAAElFTkSuQmCC
</value>
  </data>
</root>